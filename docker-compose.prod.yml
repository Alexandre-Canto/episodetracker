version: '3.8'

services:
  app:
    container_name: episodetracker_app_prod
    build:
      context: .
      dockerfile: Dockerfile.prod
    ports:
      - "4000:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:password@db:5432/episodetracker
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=${JWT_SECRET}
      - TRAKT_CLIENT_ID=${TRAKT_CLIENT_ID}
      - TRAKT_CLIENT_SECRET=${TRAKT_CLIENT_SECRET}
      - TMDB_API_KEY=${TMDB_API_KEY}
      - GROQ_API_KEY=${GROQ_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - PLEX_CLIENT_ID=${PLEX_CLIENT_ID:-episodetracker}
      - PLEX_PRODUCT=${PLEX_PRODUCT:-Episode Tracker}
      - INTEGRATION_ENCRYPTION_KEY=${INTEGRATION_ENCRYPTION_KEY}
      - ENABLE_SCHEDULER=true
      - SYNC_ON_STARTUP=${SYNC_ON_STARTUP:-false}
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS:-http://localhost:4000,https://episodetracker.homelab-canto.pt}
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - TELEGRAM_CHAT_ID=${TELEGRAM_CHAT_ID}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - app-network
    restart: always

  db:
    container_name: episodetracker_db
    image: postgres:16
    environment:
      - POSTGRES_DB=episodetracker
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5440:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network
    restart: always

  redis:
    container_name: episodetracker_redis
    image: redis:7-alpine
    ports:
      - "6480:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network
    restart: always

volumes:
  postgres_data:
  redis_data:

networks:
  app-network:
    driver: bridge

