# Database Configuration
DATABASE_URL=postgresql://postgres:password@db:5432/episodetracker

# Redis Configuration
REDIS_URL=redis://redis:6379

# JWT Secret (generate a secure random string)
# REQUIRED: Must be at least 32 characters for security
# Generate using: openssl rand -base64 32
JWT_SECRET=your-secure-jwt-secret-change-this-min-32-characters

# Trakt TV API Credentials
# Get these from: https://trakt.tv/oauth/applications
TRAKT_CLIENT_ID=your-trakt-client-id
TRAKT_CLIENT_SECRET=your-trakt-client-secret

# TMDB API Key
# Get this from: https://www.themoviedb.org/settings/api
# Can be either v3 API Key (32 chars) or v4 Bearer Token (JWT)
TMDB_API_KEY=your-tmdb-api-key-or-bearer-token

# AI API Keys (for AI Recommendations feature) - Choose ONE:
# 
# Option 1: Groq (RECOMMENDED - Truly free, no credit card required!)
# Get this from: https://console.groq.com
# Model: llama-3.3-70b-versatile (faster and better than 3.1)
GROQ_API_KEY=your-groq-api-key
#
# Option 2: OpenAI (Requires payment method on file, but free tier available)
# Get this from: https://platform.openai.com/api-keys
# Model: gpt-4o-mini (unlimited on free tier but needs credit card added)
OPENAI_API_KEY=your-openai-api-key
#
# Note: If both are set, Groq will be used by default

# Plex Integration (Optional - for automatic watch history sync from Plex Media Server)
# 
# Client ID: Identifies your app to Plex (uses "episodetracker" if not set)
# Product: App name shown in Plex authorization screen
PLEX_CLIENT_ID=episodetracker
PLEX_PRODUCT=Episode Tracker

# Encryption Key: REQUIRED for Plex/Jellyfin integration
# Must be exactly 32 characters for AES-256 encryption
# Generate using one of these commands:
#   openssl rand -hex 16
#   node -e "console.log(require('crypto').randomBytes(16).toString('hex'))"
INTEGRATION_ENCRYPTION_KEY=your-32-character-encryption-key-here

# Scheduler Settings (Optional)
# Enable automatic daily Plex sync scheduler (enabled by default in production)
# ENABLE_SCHEDULER=true
# Run sync on app startup (useful for development/testing)
# SYNC_ON_STARTUP=true

# CORS Configuration (Optional)
# Comma-separated list of allowed origins for API requests
# If not set, defaults to localhost origins for development
# Production example: ALLOWED_ORIGINS=https://episodetracker.example.com,https://www.episodetracker.example.com
# ALLOWED_ORIGINS=http://localhost:3000,http://localhost:4000,http://localhost:4001

# Telegram Notifications (Optional)
# Get bot token from @BotFather on Telegram
# Get chat ID by messaging your bot and visiting: https://api.telegram.org/bot<YOUR_BOT_TOKEN>/getUpdates
TELEGRAM_BOT_TOKEN=your-telegram-bot-token
TELEGRAM_CHAT_ID=your-telegram-chat-id
